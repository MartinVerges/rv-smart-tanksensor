
# This script requires some pipeline secrets to be configured in Gitlab
# - NPM_FONTAWESOME_KEY: The key to access the npm fontawesome repository
# - S3_ACCESS_KEY:       The access key to upload the result
# - S3_SECRET_KEY:       The secret key to upload the result

image: node:lts-bullseye

variables:
  PROJECT_NAME: "gaslevel"
  S3_BUCKET: "webinstaller"
  PIO_ENV: "wemos_d1_mini32"

.buildenv:
  before_script:
    - echo "Running inside $(pwd) - home is $HOME"
    - apt update -y && apt -y install s3cmd python3-pip
    - pip3 install -U platformio
    - echo "host_base = s3.womolin.de" > ~/.s3cfg
    - echo "host_bucket = s3.womolin.de" >> ~/.s3cfg
    - echo "bucket_location = de-fra" >> ~/.s3cfg
    - echo "use_https = True" >> ~/.s3cfg
    - echo "access_key = $S3_ACCESS_KEY" >> ~/.s3cfg
    - echo "secret_key = $S3_SECRET_KEY" >> ~/.s3cfg
    - echo "signature_v2 = False" >> ~/.s3cfg
    - npm config set "@fortawesome:registry" https://npm.fontawesome.com/
    - npm config set "//npm.fontawesome.com/:_authToken" "$NPM_FONTAWESOME_KEY"

cache:
  paths:
    - /root/.platformio/.cache
    - /root/.cache/pip
    - .pio
    - ui/node_modules

stages:
 - build
 - upload

build-webui:
  stage: build
  extends: .buildenv
  artifacts:
    paths:
      - .pio/build/$PIO_ENV/littlefs.bin
  script:
    - cd ui
    - npm install
    - npm run build
    - cd ..
    - pio run -e $PIO_ENV -t buildfs
    - find /

build-firmware:
  stage: build
  extends: .buildenv
  artifacts:
    paths:
      - current-version.json
      - .pio/build/$PIO_ENV/firmware.bin
      - .pio/build/$PIO_ENV/partitions.bin
      - /root/.platformio/packages/framework-arduinoespressif32/tools/sdk/esp32/bin/bootloader_dio_80m.bin
      - /root/.platformio/packages/framework-arduinoespressif32/tools/partitions/boot_app0.bin
  script:
    - pio run -e $PIO_ENV
    - find / |grep bootloader_dio_80m.bin
    - find / |grep boot_app0.bin
    - find /

upload:
  stage: upload
  extends: .buildenv
  dependencies:
    - build-firmware
    - build-webui
  needs:
    - build-firmware
    - build-webui
  script:
    - if [ $CI_COMMIT_TAG ]; then DEST=$PROJECT_NAME-release; else DEST=$PROJECT_NAME-latest; fi
    - echo "Project = $PROJECT_NAME - DEST = $DEST"
    - s3cmd put current-version.json s3://$S3_BUCKET/$DEST/
    - s3cmd put .pio/build/$PIO_ENV/firmware.bin s3://$S3_BUCKET/$DEST/
    - s3cmd put .pio/build/$PIO_ENV/littlefs.bin s3://$S3_BUCKET/$DEST/
    - s3cmd put .pio/build/$PIO_ENV/partitions.bin s3://$S3_BUCKET/$DEST/
    - s3cmd put /root/.platformio/packages/framework-arduinoespressif32/tools/sdk/esp32/bin/bootloader_dio_80m.bin s3://$S3_BUCKET/$DEST/
    - s3cmd put /root/.platformio/packages/framework-arduinoespressif32/tools/partitions/boot_app0.bin s3://$S3_BUCKET/$DEST/
